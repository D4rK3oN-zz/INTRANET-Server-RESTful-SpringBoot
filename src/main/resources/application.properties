# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------
# AOP
spring.aop.auto=true

# AUTO-CONFIGURATION
#spring.autoconfigure.exclude= # Auto-configuration classes to exclude.

# SPRING CONFIG - using environment property only (ConfigFileApplicationListener)
#spring.config.location= # Config file locations.
#spring.config.name=application # Config file name.

# PROFILES
#spring.profiles.active= # Comma-separated list (or list if using YAML) of active profiles.
#spring.profiles.include= # Unconditionally activate the specified comma separated profiles (or list of profiles if using YAML).

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------
# EMBEDDED SERVER CONFIGURATION (ServerProperties)
#server.address= # Network address to which the server should bind to.
#server.display-name=application # Display name of the application.
#server.error.include-exception=false # Include the "exception" attribute.
#server.error.include-stacktrace=never # When to include a "stacktrace" attribute.
#server.error.path=/error # Path of the error controller.
#server.error.whitelabel.enabled=true # Enable the default error page displayed in browsers in case of a server error.
#server.port=8080
server.servlet.context-path=/server
#server.servlet.path=/ # Path of the main dispatcher servlet.

# HTTP message conversion
#spring.http.converters.preferred-json-mapper=jackson # Preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson when both it and Jackson are on the classpath.

# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
#spring.http.encoding.force= # Force the encoding to the configured charset on HTTP requests and responses.
#spring.http.encoding.force-request= # Force the encoding to the configured charset on HTTP requests. Defaults to true when "force" has not been specified.
#spring.http.encoding.force-response= # Force the encoding to the configured charset on HTTP responses.
#spring.http.encoding.mapping= # Locale to Encoding mapping.

# JACKSON (JacksonProperties)
#spring.jackson.date-format= # Date format string or a fully-qualified date format class name. For instance `yyyy-MM-dd HH:mm:ss`.
#spring.jackson.default-property-inclusion= # Controls the inclusion of properties during serialization.
#spring.jackson.deserialization.*= # Jackson on/off features that affect the way Java objects are deserialized.
#spring.jackson.generator.*= # Jackson on/off features for generators.
#spring.jackson.joda-date-time-format= # Joda date time format string. If not configured, "date-format" will be used as a fallback if it is configured with a format string.
#spring.jackson.locale= # Locale used for formatting.
#spring.jackson.mapper.*= # Jackson general purpose on/off features.
#spring.jackson.parser.*= # Jackson on/off features for parsers.
#spring.jackson.property-naming-strategy= # One of the constants on Jackson's PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.
#spring.jackson.serialization.*= # Jackson on/off features that affect the way Java objects are serialized.
#spring.jackson.time-zone= # Time zone used when formatting dates. For instance `America/Los_Angeles`

# SPRING LDAP (LdapProperties)
#spring.ldap.urls= # LDAP URLs of the server.
#spring.ldap.base= # Base suffix from which all operations should originate.
#spring.ldap.username= # Login user of the server.
#spring.ldap.password= # Login password of the server.
#spring.ldap.base-environment.*= # LDAP specification settings.

# SPRING SOCIAL (SocialWebAutoConfiguration)
#spring.social.auto-connection-views=false # Enable the connection status view for supported providers.

# SPRING SOCIAL FACEBOOK (FacebookAutoConfiguration)
#spring.social.facebook.app-id= # your application's Facebook App ID
#spring.social.facebook.app-secret= # your application's Facebook App Secret

# SPRING SOCIAL LINKEDIN (LinkedInAutoConfiguration)
#spring.social.linkedin.app-id= # your application's LinkedIn App ID
#spring.social.linkedin.app-secret= # your application's LinkedIn App Secret

# SPRING SOCIAL TWITTER (TwitterAutoConfiguration)
#spring.social.twitter.app-id= # your application's Twitter App ID
#spring.social.twitter.app-secret= # your application's Twitter App Secret

# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
security.basic.authorize-mode=role
security.basic.enabled=true
security.basic.path=/**
#security.basic.realm=Spring # HTTP basic realm name.
security.enable-csrf=true
#security.filter-order=0 # Security filter chain order.
#security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST # Security filter chain dispatcher types.
#security.headers.cache=true # Enable cache control HTTP headers.
#security.headers.content-security-policy= # Value for content security policy header.
#security.headers.content-security-policy-mode=default # Content security policy mode.
#security.headers.content-type=true # Enable "X-Content-Type-Options" header.
#security.headers.frame=true # Enable "X-Frame-Options" header.
#security.headers.hsts=all # HTTP Strict Transport Security (HSTS) mode (none, domain, all).
#security.headers.xss=true # Enable cross site scripting (XSS) protection.
security.ignored=/public/**
#security.require-ssl=false # Enable secure channel for all requests.
#security.sessions=stateless # Session creation policy (always, never, if_required, stateless).
#security.user.name=user # Default user name.
#security.user.password= # Password for the default user name. A random password is logged on startup by default.
#security.user.role=USER # Granted roles for the default user name.

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#security.oauth2.client.client-id= # OAuth2 client id.
#security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
#security.oauth2.resource.filter-order= # The order of the filter chain used to authenticate tokens.
#security.oauth2.resource.id= # Identifier of the resource.
#security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.
#security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.
#security.oauth2.resource.service-id=resource #
#security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.
#security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.
#security.oauth2.resource.user-info-uri= # URI of the user endpoint.

# SECURITY OAUTH2 SSO (OAuth2SsoProperties)
#security.oauth2.sso.filter-order= # Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter
#security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server

# ----------------------------------------
# DATA PROPERTIES
# ----------------------------------------
# MONGODB (MongoProperties)
#spring.data.mongodb.authentication-database= # Authentication database name.
spring.data.mongodb.database=intranet
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
spring.data.mongodb.host=localhost
#spring.data.mongodb.password= # Login password of the mongo server. Cannot be set with uri.
spring.data.mongodb.port=27017
#spring.data.mongodb.reactive-repositories.enabled=true # Enable Mongo reactive repositories.
spring.data.mongodb.repositories.enabled=true
#spring.data.mongodb.uri=mongodb://localhost/test # Mongo database URI. Cannot be set with host, port and credentials.
#spring.data.mongodb.username= # Login user of the mongo server. Cannot be set with uri.

# EMBEDDED MONGODB (EmbeddedMongoProperties)
#spring.mongodb.embedded.features=SYNC_DELAY # Comma-separated list of features to enable.
#spring.mongodb.embedded.storage.database-dir= # Directory used for data storage.
#spring.mongodb.embedded.storage.oplog-size= # Maximum size of the oplog in megabytes.
#spring.mongodb.embedded.storage.repl-set-name= # Name of the replica set.
spring.mongodb.embedded.version=3.4

# DATA WEB (SpringDataWebProperties)
#spring.data.web.pageable.default-page-size=20 # Default page size.
#spring.data.web.pageable.page-parameter=page # Page index parameter name.
#spring.data.web.pageable.size-parameter=size # Page size parameter name.
#spring.data.web.sort.sort-parameter=sort # Sort parameter name.

# ----------------------------------------
# TESTING PROPERTIES
# ----------------------------------------
#spring.test.database.replace=any # Type of existing DataSource to replace.
#spring.test.mockmvc.print=default # MVC Print option.
